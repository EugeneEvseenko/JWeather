<?xml version="1.0" encoding="utf-8"?>
<Application xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
             xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" 
             xmlns:tb="http://www.hardcodet.net/taskbar" 
             xmlns:local="clr-namespace:JWeather" 
             xmlns:Wpf="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf" StartupUri="MainWindow.xaml">
    <Application.Resources>
        <Style p7:Key="RoundCorner" TargetType="{x:Type Button}" xmlns:p7="http://schemas.microsoft.com/winfx/2006/xaml">
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid p7:Name="grid">
                            <Border p7:Name="border" CornerRadius="2" Opacity="0.8" BorderBrush="Black" BorderThickness="0" Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" TextElement.FontWeight="Bold">
                                </ContentPresenter>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Opacity" TargetName="border" Value="1.0" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" TargetName="border" Value="0.9" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="grid" Value="0.25" />
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style p7:Key="MyContainer" TargetType="{x:Type ListBoxItem}" xmlns:p7="http://schemas.microsoft.com/winfx/2006/xaml">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" Value="White" />
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="BorderBrush" Value="Transparent" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="false">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="BorderBrush" Value="Transparent" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type Button}" p7:Key="RegularButton" xmlns:p7="http://schemas.microsoft.com/winfx/2006/xaml">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Background="{x:Null}">

                            <VisualStateManager.VisualStateGroups>

                                <VisualStateGroup p7:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition To="MouseOver" GeneratedDuration="0:0:1" />
                                        <VisualTransition To="Normal" GeneratedDuration="0:0:1" />
                                    </VisualStateGroup.Transitions>

                                    <VisualState p7:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="BackgroundColor" Storyboard.TargetProperty="Color" To="{DynamicResource {x:Static SystemParameters.WindowGlassBrush}}" Duration="0:0:0.2" />

                                        </Storyboard>
                                    </VisualState>
                                    <VisualState p7:Name="Normal">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="BackgroundColor" Storyboard.TargetProperty="Color" To="{DynamicResource {x:Static SystemParameters.WindowGlassBrush}}" Duration="0:0:0.2" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState p7:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="BackgroundColor" Storyboard.TargetProperty="Color" To="Transparent" Duration="0:0:0.3" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState p7:Name="Disabled" />
                                </VisualStateGroup>
                                <VisualStateGroup p7:Name="FocusStates">
                                    <VisualState p7:Name="Focused" />
                                    <VisualState p7:Name="Unfocused" />
                                </VisualStateGroup>

                            </VisualStateManager.VisualStateGroups>
                            <Border CornerRadius="0" BorderThickness="0" BorderBrush="Gray">
                                <Border.Background>
                                    <SolidColorBrush p7:Name="BackgroundColor" Color="Transparent" />
                                </Border.Background>
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>

                        </Grid>
                    </ControlTemplate>

                </Setter.Value>
            </Setter>
        </Style>


        <Style p7:Key="RadioButtonStyle" TargetType="{x:Type RadioButton}" xmlns:p7="http://schemas.microsoft.com/winfx/2006/xaml">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Height" Value="17" />
            <Setter Property="Margin" Value="5" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <BulletDecorator>
                            <BulletDecorator.Bullet>
                                <Grid Height="{TemplateBinding Height}" Width="{Binding Height, RelativeSource={RelativeSource Self}, UpdateSourceTrigger=PropertyChanged}" MinHeight="17" MinWidth="17">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="1*" />
                                        <ColumnDefinition Width="3*" />
                                        <ColumnDefinition Width="1*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="1*" />
                                        <RowDefinition Height="3*" />
                                        <RowDefinition Height="1*" />
                                    </Grid.RowDefinitions>
                                    <Ellipse p7:Name="EllipseMain" Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="0" Grid.RowSpan="3" Fill="Transparent" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{Binding Background, ElementName=MainGrid}" />
                                    <Ellipse p7:Name="CheckMark" Grid.Column="1" Grid.Row="1" Opacity="0" Fill="{Binding Background, ElementName=MainGrid}" />
                                </Grid>
                            </BulletDecorator.Bullet>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup p7:Name="CommonStates">
                                    <VisualState p7:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" To="LightGray" Duration="0:0:0.3" />
                                            <ColorAnimation Storyboard.TargetName="EllipseMain" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" To="LightGray" Duration="0:0:0.3" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup p7:Name="CheckStates">
                                    <VisualState p7:Name="Checked">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.3" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState p7:Name="Unchecked">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.3" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState p7:Name="Indeterminate">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.3" />
                                            <ColorAnimation Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" To="Gray" Duration="0:0:0.3" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter Margin="4,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" RecognizesAccessKey="True" />
                        </BulletDecorator>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="EllipseMain" Property="Fill" Value="{Binding Background, ElementName=MainGrid}" />
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="EllipseMain" Property="Stroke" Value="{Binding Background, ElementName=MainGrid}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Button}" p7:Key="OptionsButton" xmlns:p7="http://schemas.microsoft.com/winfx/2006/xaml">
            <Setter Property="Background" Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="White" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="False">
                    <Setter Property="Background" Value="Transparent" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style p7:Key="CheckBoxStyle" TargetType="{x:Type CheckBox}" xmlns:p7="http://schemas.microsoft.com/winfx/2006/xaml">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Height" Value="25" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <BulletDecorator>
                            <BulletDecorator.Bullet>
                                <Grid Height="{TemplateBinding Height}" Width="{Binding Height, RelativeSource={RelativeSource Self}, UpdateSourceTrigger=PropertyChanged}" MinHeight="25" MinWidth="25" ShowGridLines="False">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="4*" />
                                        <ColumnDefinition Width="1*" />
                                        <ColumnDefinition Width="1*" />
                                        <ColumnDefinition Width="4*" />
                                        <ColumnDefinition Width="1*" />
                                        <ColumnDefinition Width="1*" />
                                        <ColumnDefinition Width="2*" />
                                        <ColumnDefinition Width="2*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="3*" />
                                        <RowDefinition Height="1*" />
                                        <RowDefinition Height="1*" />
                                        <RowDefinition Height="1*" />
                                        <RowDefinition Height="4*" />
                                        <RowDefinition Height="1*" />
                                        <RowDefinition Height="1*" />
                                        <RowDefinition Height="4*" />
                                    </Grid.RowDefinitions>

                                    <Border p7:Name="MainBorder" Grid.ColumnSpan="9" Grid.RowSpan="9" CornerRadius="4" BorderThickness="1" Background="Transparent" />

                                    <Border p7:Name="InnerBorder" Grid.Column="1" Grid.ColumnSpan="5" Grid.Row="2" Grid.RowSpan="5" BorderThickness="1" BorderBrush="{TemplateBinding Foreground}" />

                                    <Path p7:Name="InnerPath" Grid.Column="1" Grid.ColumnSpan="5" Grid.Row="2" Grid.RowSpan="5" Data="M31,5 L19.5,5 19.5,19.5 34.5,19.5 34.5,11.75" Stretch="Fill" Stroke="{TemplateBinding Foreground}" />

                                    <Path p7:Name="CheckMark" Grid.Column="2" Grid.ColumnSpan="5" Grid.Row="1" Grid.RowSpan="5" Opacity="0" Data="M9.07743946676476E-09,4.31805768640244L4.68740335877841,8.86361158398516C4.68740335877841,8.86361158398516,16.3281249985376,-2.42451336648723,16.3281249985376,-2.42451336648723L14.0622100581796,-4.77304938341948 4.68740335877846,4.31805791992662 2.22656251699567,1.93164208562579z" Fill="{TemplateBinding Foreground}" Stretch="Fill" Stroke="{TemplateBinding Foreground}" />

                                    <Path p7:Name="InderminateMark" Grid.Column="3" Grid.Row="4" Data="M0,4 L1,5 5,1 4,0" Opacity="0" Stretch="Fill" StrokeThickness="0" Fill="{Binding Background, ElementName=MainGrid}" />
                                </Grid>
                            </BulletDecorator.Bullet>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup p7:Name="CheckStates">
                                    <VisualState p7:Name="Checked">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CheckMark" Duration="0:0:0.2" To="1" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState p7:Name="Unchecked">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CheckMark" Duration="0:0:0.2" To="0" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState p7:Name="Indeterminate">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="InderminateMark" Duration="0:0:0.2" To="1" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter Margin="4,0,4,0" VerticalAlignment="Center" HorizontalAlignment="Left" RecognizesAccessKey="True" />
                        </BulletDecorator>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value="0.80" />

                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="InnerBorder" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="MainBorder" Property="Opacity" Value="0.5" />
                                <Setter TargetName="MainBorder" Property="Background" Value="{Binding Background, ElementName=MainGrid}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="CheckMark" Property="Fill" Value="#cccccc" />
                                <Setter TargetName="CheckMark" Property="Stroke" Value="#cccccc" />
                                <Setter TargetName="InnerPath" Property="Stroke" Value="#cccccc" />
                                <Setter TargetName="InderminateMark" Property="Fill" Value="#cccccc" />
                                <Setter TargetName="InnerBorder" Property="BorderBrush" Value="#cccccc" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style p7:Key="radioButtonSetting" TargetType="{x:Type RadioButton}" xmlns:p7="http://schemas.microsoft.com/winfx/2006/xaml">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <DockPanel>
                            <Image p7:Name="RadioButtonImage" Width="20" Height="20" />
                            <ContentPresenter Margin="4,0,0,0" VerticalAlignment="Center" />
                        </DockPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter TargetName="RadioButtonImage" Property="Source" Value="file:///C:\Users\jonik\source\repos\TemperatureDisplay\TemperatureDisplay\Images\radiobox-blank.png" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="RadioButtonImage" Property="Source" Value="file:///C:\Users\jonik\source\repos\TemperatureDisplay\TemperatureDisplay\Images\radiobox-marked.png" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style p7:Key="FocusVisual" xmlns:p7="http://schemas.microsoft.com/winfx/2006/xaml">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush p7:Key="Button.Static.Background" Color="#FFDDDDDD" xmlns:p7="http://schemas.microsoft.com/winfx/2006/xaml" />
        <SolidColorBrush p7:Key="Button.Static.Border" Color="#FF707070" xmlns:p7="http://schemas.microsoft.com/winfx/2006/xaml" />
        <SolidColorBrush p7:Key="Button.MouseOver.Background" Color="#FFBEE6FD" xmlns:p7="http://schemas.microsoft.com/winfx/2006/xaml" />
        <SolidColorBrush p7:Key="Button.MouseOver.Border" Color="#FF3C7FB1" xmlns:p7="http://schemas.microsoft.com/winfx/2006/xaml" />
        <SolidColorBrush p7:Key="Button.Pressed.Background" Color="#FFC4E5F6" xmlns:p7="http://schemas.microsoft.com/winfx/2006/xaml" />
        <SolidColorBrush p7:Key="Button.Pressed.Border" Color="#FF2C628B" xmlns:p7="http://schemas.microsoft.com/winfx/2006/xaml" />
        <SolidColorBrush p7:Key="Button.Disabled.Background" Color="#FFF4F4F4" xmlns:p7="http://schemas.microsoft.com/winfx/2006/xaml" />
        <SolidColorBrush p7:Key="Button.Disabled.Border" Color="#FFADB2B5" xmlns:p7="http://schemas.microsoft.com/winfx/2006/xaml" />
        <SolidColorBrush p7:Key="Button.Disabled.Foreground" Color="#FF838383" xmlns:p7="http://schemas.microsoft.com/winfx/2006/xaml" />


        <Style xmlns:sys="clr-namespace:System;assembly=mscorlib" p8:Key="RoundProgressBarStyle" TargetType="{x:Type ProgressBar}" xmlns:p8="http://schemas.microsoft.com/winfx/2006/xaml">
            <Style.Resources>
                <local:RoundProgressPathConverter p8:Key="Conv" />
                <!-- нам понадобится пара констант -->
                <!-- доля рабиуса для внутренней части -->
                <sys:Double p8:Key="RelativeThickness">0.75</sys:Double>
                <!-- просто 0 -->
                <sys:Double p8:Key="Zero">0.0</sys:Double>
                <!-- просто 1 -->
                <sys:Double p8:Key="One">1.0</sys:Double>
                <!-- какой процент рисовать для неопределённого состояния -->
                <sys:Double p8:Key="IndeterminatePart">0.15</sys:Double>
                <!-- обычно прогресс по умолчанию зелёный -->
                <SolidColorBrush p8:Key="ProgressBar.Progress" Color="#FF06B025" />
                <!-- стандартный фон -->
                <SolidColorBrush p8:Key="ProgressBar.Background" Color="#FFE6E6E6" />
                <!-- стандартный цвет границы -->
                <SolidColorBrush p8:Key="ProgressBar.Border" Color="#FFBC8585" />
            </Style.Resources>
            <Setter Property="Foreground" Value="{StaticResource ProgressBar.Progress}" />
            <Setter Property="Background" Value="{StaticResource ProgressBar.Background}" />
            <Setter Property="BorderBrush" Value="{StaticResource ProgressBar.Border}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ProgressBar}">
                        <Grid p8:Name="TemplateRoot">
                            <!-- в неопределённом состоянии запускаем вращающуюся анимацию -->
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup p8:Name="CommonStates">
                                    <VisualState p8:Name="Determinate" />
                                    <VisualState p8:Name="Indeterminate">
                                        <Storyboard RepeatBehavior="Forever">
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" Storyboard.TargetName="Animation" From="0" To="360" Duration="0:0:1">
                                                <DoubleAnimation.EasingFunction>
                                                    <CircleEase EasingMode="EaseInOut"></CircleEase>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <!-- это фон, красим его в цвет фона-->
                            <Path Fill="{TemplateBinding Background}" Stretch="Uniform" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}">
                                <Path.Data>
                                    <MultiBinding Converter="{StaticResource Conv}" ConverterParameter="{StaticResource RelativeThickness}">
                                        <!-- val=1, min=0, max=1 даёт полный круг -->
                                        <Binding Source="{StaticResource One}" />
                                        <Binding Source="{StaticResource Zero}" />
                                        <Binding Source="{StaticResource One}" />
                                    </MultiBinding>
                                </Path.Data>
                            </Path>
                            <Path Fill="{TemplateBinding Foreground}" Stretch="Uniform" p8:Name="Indicator">
                                <Path.Data>
                                    <MultiBinding Converter="{StaticResource Conv}" ConverterParameter="{StaticResource RelativeThickness}">
                                        <Binding Path="Value" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="Minimum" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="Maximum" RelativeSource="{RelativeSource TemplatedParent}" />
                                    </MultiBinding>
                                </Path.Data>
                            </Path>
                            <!-- это анимировнная штука, будет показываться в неопределённом состоянии -->
                            <Path Fill="{TemplateBinding Foreground}" Stretch="Uniform" p8:Name="Animation" Visibility="Collapsed" RenderTransformOrigin="0.5,0.5">
                                <Path.Data>
                                    <MultiBinding Converter="{StaticResource Conv}" ConverterParameter="{StaticResource RelativeThickness}">
                                        <Binding Source="{StaticResource IndeterminatePart}" />
                                        <Binding Source="{StaticResource Zero}" />
                                        <Binding Source="{StaticResource One}" />
                                    </MultiBinding>
                                </Path.Data>
                                <!-- положим пустое вращение, чтобы к нему цеплялась анимация -->
                                <Path.RenderTransform>
                                    <RotateTransform />
                                </Path.RenderTransform>
                            </Path>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <!-- в случае неопределённого состояния уберём нормальный индикатор и покажем анимацию -->
                            <Trigger Property="IsIndeterminate" Value="true">
                                <Setter Property="Visibility" TargetName="Indicator" Value="Collapsed" />
                                <Setter Property="Visibility" TargetName="Animation" Value="Visible" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>




        <Style p7:Key="MyButtonStyle" TargetType="{x:Type Button}" xmlns:p7="http://schemas.microsoft.com/winfx/2006/xaml">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border p7:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter p7:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}" />
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}" />
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}" />
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}" />
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate p7:Key="SliderControlTemplate1" TargetType="{x:Type Slider}" xmlns:p7="http://schemas.microsoft.com/winfx/2006/xaml">
            <Grid />
        </ControlTemplate>
        <SolidColorBrush p7:Key="SliderThumb.Static.Foreground" Color="#FFE5E5E5" xmlns:p7="http://schemas.microsoft.com/winfx/2006/xaml" />
        <SolidColorBrush p7:Key="SliderThumb.MouseOver.Background" Color="#FFDCECFC" xmlns:p7="http://schemas.microsoft.com/winfx/2006/xaml" />
        <SolidColorBrush p7:Key="SliderThumb.MouseOver.Border" Color="#FF7Eb4EA" xmlns:p7="http://schemas.microsoft.com/winfx/2006/xaml" />
        <SolidColorBrush p7:Key="SliderThumb.Pressed.Background" Color="#FFDAECFC" xmlns:p7="http://schemas.microsoft.com/winfx/2006/xaml" />
        <SolidColorBrush p7:Key="SliderThumb.Pressed.Border" Color="#FF569DE5" xmlns:p7="http://schemas.microsoft.com/winfx/2006/xaml" />
        <SolidColorBrush p7:Key="SliderThumb.Disabled.Background" Color="#FFF0F0F0" xmlns:p7="http://schemas.microsoft.com/winfx/2006/xaml" />
        <SolidColorBrush p7:Key="SliderThumb.Disabled.Border" Color="#FFD9D9D9" xmlns:p7="http://schemas.microsoft.com/winfx/2006/xaml" />
        <SolidColorBrush p7:Key="SliderThumb.Static.Background" Color="#FFF0F0F0" xmlns:p7="http://schemas.microsoft.com/winfx/2006/xaml" />
        <SolidColorBrush p7:Key="SliderThumb.Static.Border" Color="#FFACACAC" xmlns:p7="http://schemas.microsoft.com/winfx/2006/xaml" />
        <ControlTemplate p7:Key="SliderThumbHorizontalTop" TargetType="{x:Type Thumb}" xmlns:p7="http://schemas.microsoft.com/winfx/2006/xaml">
            <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                <Path p7:Name="grip" Data="M 0,6 C0,6 5.5,0 5.5,0 5.5,0 11,6 11,6 11,6 11,18 11,18 11,18 0,18 0,18 0,18 0,6 0,6 z" Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" SnapsToDevicePixels="True" Stroke="{StaticResource SliderThumb.Static.Border}" StrokeThickness="1" UseLayoutRounding="True" VerticalAlignment="Center" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}" />
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}" />
                </Trigger>
                <Trigger Property="IsDragging" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}" />
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}" />
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate p7:Key="SliderThumbHorizontalBottom" TargetType="{x:Type Thumb}" xmlns:p7="http://schemas.microsoft.com/winfx/2006/xaml">
            <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                <Path p7:Name="grip" Data="M 0,12 C0,12 5.5,18 5.5,18 5.5,18 11,12 11,12 11,12 11,0 11,0 11,0 0,0 0,0 0,0 0,12 0,12 z" Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" SnapsToDevicePixels="True" Stroke="{StaticResource SliderThumb.Static.Border}" StrokeThickness="1" UseLayoutRounding="True" VerticalAlignment="Center" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}" />
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}" />
                </Trigger>
                <Trigger Property="IsDragging" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}" />
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}" />
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <SolidColorBrush p7:Key="SliderThumb.Track.Border" Color="#FFD6D6D6" xmlns:p7="http://schemas.microsoft.com/winfx/2006/xaml" />
        <SolidColorBrush p7:Key="SliderThumb.Track.Background" Color="#FFE7EAEA" xmlns:p7="http://schemas.microsoft.com/winfx/2006/xaml" />
        <Style p7:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}" xmlns:p7="http://schemas.microsoft.com/winfx/2006/xaml">
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate p7:Key="SliderThumbHorizontalDefault" TargetType="{x:Type Thumb}" xmlns:p7="http://schemas.microsoft.com/winfx/2006/xaml">
            <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                <Path p7:Name="grip" Data="M 0,0 C0,0 11,0 11,0 11,0 11,18 11,18 11,18 0,18 0,18 0,18 0,0 0,0 z" Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" SnapsToDevicePixels="True" Stroke="{StaticResource SliderThumb.Static.Border}" StrokeThickness="1" UseLayoutRounding="True" VerticalAlignment="Center" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}" />
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}" />
                </Trigger>
                <Trigger Property="IsDragging" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}" />
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}" />
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate p7:Key="SliderHorizontal" TargetType="{x:Type Slider}" xmlns:p7="http://schemas.microsoft.com/winfx/2006/xaml">
            <Border p7:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <TickBar p7:Name="TopTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,0,0,2" Placement="Top" Grid.Row="0" Visibility="Collapsed" />
                    <TickBar p7:Name="BottomTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,2,0,0" Placement="Bottom" Grid.Row="2" Visibility="Collapsed" />
                    <Border p7:Name="TrackBackground" BorderBrush="{StaticResource SliderThumb.Track.Border}" BorderThickness="1" Background="{StaticResource SliderThumb.Track.Background}" Height="4.0" Margin="5,0" Grid.Row="1" VerticalAlignment="center">
                        <Canvas Margin="-6,-1">
                            <Rectangle p7:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Height="4.0" Visibility="Hidden" />
                        </Canvas>
                    </Border>
                    <Track p7:Name="PART_Track" Grid.Row="1">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource RepeatButtonTransparent}" />
                        </Track.DecreaseRepeatButton>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource RepeatButtonTransparent}" />
                        </Track.IncreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb p7:Name="Thumb" Focusable="False" Height="18" OverridesDefaultStyle="True" Template="{StaticResource SliderThumbHorizontalDefault}" VerticalAlignment="Center" Width="11" />
                        </Track.Thumb>
                    </Track>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="TickPlacement" Value="TopLeft">
                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible" />
                    <Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbHorizontalTop}" />
                    <Setter Property="Margin" TargetName="TrackBackground" Value="5,2,5,0" />
                </Trigger>
                <Trigger Property="TickPlacement" Value="BottomRight">
                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible" />
                    <Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbHorizontalBottom}" />
                    <Setter Property="Margin" TargetName="TrackBackground" Value="5,0,5,2" />
                </Trigger>
                <Trigger Property="TickPlacement" Value="Both">
                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible" />
                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible" />
                </Trigger>
                <Trigger Property="IsSelectionRangeEnabled" Value="true">
                    <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible" />
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="true">
                    <Setter Property="Foreground" TargetName="Thumb" Value="Blue" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate p7:Key="SliderThumbVerticalLeft" TargetType="{x:Type Thumb}" xmlns:p7="http://schemas.microsoft.com/winfx/2006/xaml">
            <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                <Path p7:Name="grip" Data="M 6,11 C6,11 0,5.5 0,5.5 0,5.5 6,0 6,0 6,0 18,0 18,0 18,0 18,11 18,11 18,11 6,11 6,11 z" Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" Stroke="{StaticResource SliderThumb.Static.Border}" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}" />
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}" />
                </Trigger>
                <Trigger Property="IsDragging" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}" />
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}" />
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate p7:Key="SliderThumbVerticalRight" TargetType="{x:Type Thumb}" xmlns:p7="http://schemas.microsoft.com/winfx/2006/xaml">
            <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                <Path p7:Name="grip" Data="M 12,11 C12,11 18,5.5 18,5.5 18,5.5 12,0 12,0 12,0 0,0 0,0 0,0 0,11 0,11 0,11 12,11 12,11 z" Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" Stroke="{StaticResource SliderThumb.Static.Border}" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}" />
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}" />
                </Trigger>
                <Trigger Property="IsDragging" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}" />
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}" />
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate p7:Key="SliderThumbVerticalDefault" TargetType="{x:Type Thumb}" xmlns:p7="http://schemas.microsoft.com/winfx/2006/xaml">
            <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                <Path p7:Name="grip" Data="M0.5,0.5 L18.5,0.5 18.5,11.5 0.5,11.5z" Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" Stroke="{StaticResource SliderThumb.Static.Border}" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}" />
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}" />
                </Trigger>
                <Trigger Property="IsDragging" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}" />
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}" />
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate p7:Key="SliderVertical" TargetType="{x:Type Slider}" xmlns:p7="http://schemas.microsoft.com/winfx/2006/xaml">
            <Border p7:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition MinWidth="{TemplateBinding MinWidth}" Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TickBar p7:Name="TopTick" Grid.Column="0" Fill="{TemplateBinding Foreground}" Margin="0,0,2,0" Placement="Left" Visibility="Collapsed" Width="4" />
                    <TickBar p7:Name="BottomTick" Grid.Column="2" Fill="{TemplateBinding Foreground}" Margin="2,0,0,0" Placement="Right" Visibility="Collapsed" Width="4" />
                    <Border p7:Name="TrackBackground" BorderBrush="{StaticResource SliderThumb.Track.Border}" BorderThickness="1" Background="{StaticResource SliderThumb.Track.Background}" Grid.Column="1" HorizontalAlignment="center" Margin="0,5" Width="4.0">
                        <Canvas Margin="-1,-6">
                            <Rectangle p7:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Visibility="Hidden" Width="4.0" />
                        </Canvas>
                    </Border>
                    <Track p7:Name="PART_Track" Grid.Column="1">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource RepeatButtonTransparent}" />
                        </Track.DecreaseRepeatButton>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource RepeatButtonTransparent}" />
                        </Track.IncreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb p7:Name="Thumb" Focusable="False" Height="11" OverridesDefaultStyle="True" Template="{StaticResource SliderThumbVerticalDefault}" VerticalAlignment="Top" Width="18" />
                        </Track.Thumb>
                    </Track>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="TickPlacement" Value="TopLeft">
                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible" />
                    <Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbVerticalLeft}" />
                    <Setter Property="Margin" TargetName="TrackBackground" Value="2,5,0,5" />
                </Trigger>
                <Trigger Property="TickPlacement" Value="BottomRight">
                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible" />
                    <Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbVerticalRight}" />
                    <Setter Property="Margin" TargetName="TrackBackground" Value="0,5,2,5" />
                </Trigger>
                <Trigger Property="TickPlacement" Value="Both">
                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible" />
                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible" />
                </Trigger>
                <Trigger Property="IsSelectionRangeEnabled" Value="true">
                    <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible" />
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="true">
                    <Setter Property="Foreground" TargetName="Thumb" Value="Blue" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <SolidColorBrush p7:Key="SliderColdBrush" Color="{Binding Background, ElementName=MainGrid}" xmlns:p7="http://schemas.microsoft.com/winfx/2006/xaml" />
        <ControlTemplate p7:Key="simpleSliderCold" TargetType="{x:Type Slider}" xmlns:p7="http://schemas.microsoft.com/winfx/2006/xaml">
            <Border SnapsToDevicePixels="true" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <Rectangle p7:Name="PART_SelectionRange" />

                    <Track p7:Name="PART_Track" Grid.Row="1">
                        <Track.Thumb>
                            <Thumb p7:Name="Thumb">
                                <Thumb.Template>
                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                        <Rectangle Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" Opacity="0.5" StrokeThickness="1" Width="10" Height="18" SnapsToDevicePixels="True" />
                                    </ControlTemplate>
                                </Thumb.Template>
                            </Thumb>
                        </Track.Thumb>
                    </Track>
                </Grid>
            </Border>
        </ControlTemplate>
        <ControlTemplate p7:Key="simpleSliderHot" TargetType="{x:Type Slider}" xmlns:p7="http://schemas.microsoft.com/winfx/2006/xaml">
            <Border SnapsToDevicePixels="true" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <Rectangle p7:Name="PART_SelectionRange" />

                    <Track p7:Name="PART_Track" Grid.Row="1">
                        <Track.Thumb>
                            <Thumb p7:Name="Thumb">
                                <Thumb.Template>
                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                        <Rectangle Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1" Width="10" Height="18" SnapsToDevicePixels="True" />
                                    </ControlTemplate>
                                </Thumb.Template>
                            </Thumb>
                        </Track.Thumb>
                    </Track>
                </Grid>
            </Border>
        </ControlTemplate>

        <Style p7:Key="ScrollThumbs" TargetType="{x:Type Thumb}" xmlns:p7="http://schemas.microsoft.com/winfx/2006/xaml">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid p7:Name="Grid">
                            <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="Transparent" />
                            <Border p7:Name="Rectangle1" CornerRadius="5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Background="{TemplateBinding Background}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Tag" Value="Horizontal">
                                <Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
                                <Setter TargetName="Rectangle1" Property="Height" Value="7" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style p7:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}" xmlns:p7="http://schemas.microsoft.com/winfx/2006/xaml">
            <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
            <Setter Property="Foreground" Value="#8C8C8C" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Width" Value="8" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid p7:Name="GridRoot" Width="8" Background="{TemplateBinding Background}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0.00001*" />
                            </Grid.RowDefinitions>

                            <Track p7:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="false">
                                <Track.Thumb>
                                    <Thumb p7:Name="Thumb" Opacity="0.3" Background="{TemplateBinding Foreground}" Style="{DynamicResource ScrollThumbs}" />
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton p7:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="false" />
                                </Track.IncreaseRepeatButton>
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton p7:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="false" />
                                </Track.DecreaseRepeatButton>
                            </Track>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                                <Setter Value="{DynamicResource ButtonSelectBrush}" TargetName="Thumb" Property="Background" />
                            </Trigger>
                            <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                                <Setter Value="{DynamicResource DarkBrush}" TargetName="Thumb" Property="Background" />
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="Orientation" Value="Horizontal">
                                <Setter TargetName="GridRoot" Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="PART_Track" Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Width" Value="Auto" />
                                <Setter Property="Height" Value="8" />
                                <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                                <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                                <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style p7:Key="ButtonMenu" TargetType="{x:Type Button}" xmlns:p7="http://schemas.microsoft.com/winfx/2006/xaml">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border p7:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter p7:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


    </Application.Resources>

</Application>
